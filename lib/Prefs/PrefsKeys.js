/**
 * PrefsKeys Library
 *
 * @author Hollowman <hollowman@opensuse.org>
 * @copyright  2020-2024
 */

/**
 * prefs keys
 */
export class PrefsKeys {
    /**
     * Current shell version
     *
     * @type {number|null}
     */
    #shellVersion = null;

    constructor(shellVersion) {
        this.#shellVersion = shellVersion;

        /**
         * holds all keys generated by this.#setKey()
         *
         * @member {Object}
         */
        this.keys = {};

        this.#setDefaults();
    }

    /**
     * set all default keys
     *
     * @returns {void}
     */
    #setDefaults() {
        // General Settings
        this.#setKey(
            'general',
            'candidate-orientation',
            'AdwComboRow',
            true,
            {
                default: 0,
                minimal: 0,
                superminimal: 0
            },
            {
                0: 'disable',
                1: 'vertical',
                2: 'horizontal'
            }
        );
    
        this.#setKey(
            'general',
            'candidate-popup-animation',
            'AdwComboRow',
            true,
            {
                default: 0,
                minimal: 0,
                superminimal: 0
            },
            {
                0: 'disable',
                1: 'none',
                2: 'slide',
                3: 'fade',
                4: 'all'
            }
        );
    
        this.#setKey(
            'general',
            'candidate-box-right-click-func',
            'AdwComboRow',
            true,
            {
                default: 0,
                minimal: 0,
                superminimal: 0
            },
            {
                0: 'open-menu',
                1: 'switch-source'
            }
        );
    
        this.#setKey(
            'general',
            'candidate-scroll-mode',
            'AdwComboRow',
            true,
            {
                default: 0,
                minimal: 0,
                superminimal: 0
            },
            {
                0: 'change-page',
                1: 'change-candidate'
            }
        );
    
        this.#setKey(
            'general',
            'remember-candidate-position',
            'AdwComboRow',
            true,
            {
                default: 0,
                minimal: 0,
                superminimal: 0
            },
            {
                0: 'remember-last-position',
                1: 'dont-remember-position'
            }
        );
    
        this.#setKey(
            'general',
            'candidate-box-position',
            'AdwComboRow',
            true,
            {
                default: 0,
                minimal: 0,
                superminimal: 0
            },
            {
                0: 'center',
                1: 'center-left',
                2: 'top-left',
                3: 'top-center',
                4: 'top-right',
                5: 'center-right',
                6: 'bottom-right',
                7: 'bottom-center',
                8: 'bottom-left'
            }
        );
    
        this.#setKey(
            'general',
            'use-custom-font',
            'AdwPreferencesRow',
            true,
            {
                default: 'Sans Regular 16',
                minimal: 'Sans Regular 16',
                superminimal: 'Sans Regular 16'
            }
        );
    
        this.#setKey(
            'general',
            'ascii-mode',
            'AdwComboRow',
            true,
            {
                default: 0,
                minimal: 0,
                superminimal: 0
            },
            {
                0: 'on',
                1: 'off',
                2: 'keep'
            }
        );
    
        this.#setKey(
            'general',
            'candidate-opacity',
            'AdwActionRow',
            true,
            {
                default: 255,
                minimal: 1,
                superminimal: 1
            }
        );
    
        this.#setKey(
            'general',
            'fix-ime-list',
            'AdwComboRow',
            true,
            {
                default: 0,
                minimal: 0,
                superminimal: 0
            },
            {
                0: 'on',
                1: 'off',
                2: 'keep'
            }
        );
    
        this.#setKey(
            'general',
            'use-candidate-reposition',
            'AdwComboRow',
            true,
            {
                default: 0,
                minimal: 0,
                superminimal: 0
            },
            {
                0: 'enable',
                1: 'disable'
            }
        );
    
        this.#setKey(
            'general',
            'use-candidate-buttons',
            'AdwComboRow',
            true,
            {
                default: 0,
                minimal: 0,
                superminimal: 0
            },
            {
                0: 'on',
                1: 'off',
                2: 'keep'
            }
        );
    
        // Indicator Settings
        this.#setKey(
            'indicator',
            'use-input-indicator',
            'AdwSwitchRow',
            true,
            {
                default: true,
                minimal: false,
                superminimal: false
            }
        );
    
        this.#setKey(
            'indicator',
            'input-indicator-only-on-toggle',
            'AdwSwitchRow',
            true,
            {
                default: true,
                minimal: false,
                superminimal: false
            }
        );
    
        this.#setKey(
            'indicator',
            'input-indicator-only-use-ascii',
            'AdwSwitchRow',
            true,
            {
                default: false,
                minimal: false,
                superminimal: true
            }
        );
    
        this.#setKey(
            'indicator',
            'input-indicator-not-on-single-ime',
            'AdwSwitchRow',
            true,
            {
                default: true,
                minimal: false,
                superminimal: true
            }
        );
    
        this.#setKey(
            'indicator',
            'input-indicator-right-close',
            'AdwSwitchRow',
            true,
            {
                default: false,
                minimal: false,
                superminimal: true
            }
        );
    
        this.#setKey(
            'indicator',
            'input-indicator-use-scroll',
            'AdwSwitchRow',
            true,
            {
                default: false,
                minimal: true,
                superminimal: false
            }
        );
    
        this.#setKey(
            'indicator',
            'input-indicator-animation',
            'AdwComboRow',
            true,
            {
                default: 0,
                minimal: 0,
                superminimal: 0
            },
            {
                0: 'none',
                1: 'slide',
                2: 'fade',
                3: 'all'
            }
        );
    
        this.#setKey(
            'indicator',
            'use-indicator-custom-font',
            'AdwPreferencesRow',
            true,
            {
                default: 0,
                minimal: 0,
                superminimal: 0
            },
            {
                0: 'Sans Regular 16',
                1: 'Sans Bold 18',
                2: 'Sans Italic 14'
            }
        );
    
        this.#setKey(
            'indicator',
            'use-indicator-left-click',
            'AdwComboRow',
            true,
            {
                default: 0,
                minimal: 0,
                superminimal: 0
            },
            {
                0: 'drag-to-move',
                1: 'switch-source'
            }
        );
    
        this.#setKey(
            'indicator',
            'indicator-opacity',
            'GtkScale',
            true,
            {
                default: 255,
                minimal: 200,
                superminimal: 150
            }
        );
    
        this.#setKey(
            'indicator',
            'use-indicator-show-delay',
            'GtkScale',
            true,
            {
                default: false,
                minimal: true,
                superminimal: false
            }
        );
    
        this.#setKey(
            'indicator',
            'input-indicator-show-time',
            'AdwSlider',
            true,
            {
                default: 1,
                minimal: 2,
                superminimal: 3
            }
        );
    
        // this.#setKey(
        //     'indicator',
        //     'use-indicator-auto-hide',
        //     'AdwSwitchRow',
        //     true,
        //     {
        //         default: true,
        //         minimal: false,
        //         superminimal: true
        //     }
        // );
    
        // this.#setKey(
        //     'indicator',
        //     'input-indicator-hide-time',
        //     'AdwSlider',
        //     true,
        //     {
        //         default: 1,
        //         minimal: 2,
        //         superminimal: 3
        //     }
        // );
    
        // Tray Settings
        this.#setKey(
            'tray',
            'use-tray',
            'AdwSwitchRow',
            true,
            {
                default: false,
                minimal: false,
                superminimal: false
            }
        );
    
        this.#setKey(
            'tray',
            'menu-ibus-emoji',
            'AdwSwitchRow',
            true,
            {
                default: false,
                minimal: false,
                superminimal: false
            }
        );
    
        this.#setKey(
            'tray',
            'menu-extension-preference',
            'AdwSwitchRow',
            true,
            {
                default: false,
                minimal: false,
                superminimal: false
            }
        );
    
        this.#setKey(
            'tray',
            'menu-ibus-preference',
            'AdwSwitchRow',
            true,
            {
                default: false,
                minimal: false,
                superminimal: false
            }
        );
    
        this.#setKey(
            'tray',
            'menu-ibus-version',
            'AdwSwitchRow',
            true,
            {
                default: false,
                minimal: false,
                superminimal: false
            }
        );
    
        this.#setKey(
            'tray',
            'menu-ibus-restart',
            'AdwSwitchRow',
            true,
            {
                default: false,
                minimal: false,
                superminimal: false
            }
        );
    
        this.#setKey(
            'tray',
            'menu-ibus-exit',
            'AdwSwitchRow',
            true,
            {
                default: false,
                minimal: false,
                superminimal: false
            }
        );
    
        // Theme Settings
        this.#setKey(
            'theme',
            'custom-theme',
            'GtkCheckButton',
            true,
            {
                default: false,
                minimal: false,
                superminimal: false
            }
        );
    
        this.#setKey(
            'theme',
            'custom-theme-dark',
            'GtkCheckButton',
            true,
            {
                default: false,
                minimal: false,
                superminimal: false
            }
        );
    
        // Background Settings
        this.#setKey(
            'background',
            'custom-bg',
            'GtkCheckButton',
            true,
            {
                default: false,
                minimal: false,
                superminimal: false
            }
        );
    
        this.#setKey(
            'background',
            'custom-bg-dark',
            'AdwPreferencesRow',
            true,
            {
                default: false,
                minimal: false,
                superminimal: false
            }
        );
    
        // Settings
        this.#setKey(
            'settings',
            'restore-default-settings',
            'AdwActionRow',
            true,
            {
                default: '',
                minimal: '',
                superminimal: ''
            }
        );
    
        this.#setKey(
            'settings',
            'export-current-settings',
            'AdwActionRow',
            true,
            {
                default: '',
                minimal: '',
                superminimal: ''
            }
        );
    
        this.#setKey(
            'settings',
            'import-settings-from-file',
            'AdwActionRow',
            true,
            {
                default: '',
                minimal: '',
                superminimal: ''
            }
        );
    
        this.#setKey(
            'settings',
            'gnome-settings',
            'AdwActionRow',
            true,
            {
                default: '',
                minimal: '',
                superminimal: ''
            }
        );
    
        this.#setKey(
            'settings',
            'menu-ibus-preference',
            'AdwActionRow',
            true,
            {
                default: '',
                minimal: '',
                superminimal: ''
            }
        );
    }

    #setKey(category, name, widgetType, supported, profiles, maps = {}) {
        let id = name.replace(/-/g, '_');
        let widgetName = widgetType.toLowerCase().replace('adw', '').replace('gtk', '');
        let widgetId = `${id}_${widgetName}`;

        if (widgetType === 'AdwActionRow' || widgetType === 'AdwComboRow' || widgetType === 'AdwPreferencesRow') {
            widgetId = `${id}_row`;
        }

        console.log(`生成的widgetId: ${widgetId}, 对应的name: ${name}, widgetType: ${widgetType}`);

        this.keys[id] = {
            category,
            widgetType,
            name,
            id,
            widgetId,
            supported,
            profiles,
            maps
        };

        return this.keys[id];
    }

    deleteKey(id) {
        delete this.keys[id];
    }
}

export function getPrefsKeys(shellVersion) {
    return new PrefsKeys(shellVersion);
}
